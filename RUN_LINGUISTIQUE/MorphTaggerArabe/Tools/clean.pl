

#use strict;
use utf8;
binmode(STDIN,":utf8");
binmode(STDOUT, ":utf8");

my $seppunc = 1;

use strict;
use Getopt::Long;


#die "$0 -seed seedfile -input textfile -stem stemfile -segm segment-file -fact factor-file\n"
#	if @ARGV==0;
my ($seppunc,$removepunc,$removeeng,$transtac_set,$verbose)=(1,0,0,0,0);
GetOptions ("d!"=>\$seppunc,
            "v"=>\$verbose,
			"tr"=>\$transtac_set,
		   );

#dont seperate puncs
#if ($ARGV[0] eq '-d'){
#	$seppunc = 0;
#	shift @ARGV;
#}

#substituted
my %subs = ();
#unknown
my %unknown = ();

#my @known = ("a".."z","A".."Z","0".."9","\x{060C}","\x{061B}","\x{061F}","\x{0621}", .. hex("x063A"),"\x{0640}" .. "\x{0652}","\x{0670}","\x{0671}","\x{067E}","\x{0686}","\x{0698}","\x{06A4}","\x{06AF}","\x{0660}".."\x{0669}");
#cut -f 1 chars_eng | sort | perl -ne 'chop; print $_, " "' | less
my @knowneng     = ('´', '`','^','~', '<', '=', '>', '|', '_', '-', ',', '"', ';', ':', '!', '?', '/', '.', '\'', '(', ')', '[', ']', '{', '}', '@', '$', '*', '\\', '&', '%', '+', '0'..'9', 'a'..'z','A'..'Z');
my @knownara     = ('´',     '^','~', '<', '=', '>',      '_', '-', ',', '"', ';', ':', '!',      '/', '.', '\'', '(', ')', '[', ']', '{', '}', '@', '$', '*', '\\', '&', '%', '+', '0'..'9', 'a'..'z','A'..'Z', 'ء',            'ا','ب',    'ة','ت','ث','ج'    ,'ح','خ','د','ذ','ر','ز'    ,'س','ش','ص','ض','ط','ظ','ع','غ','ف','ق','ك'    ,'ل','م','ن','ه' ,'ؤ', 'و', 'ي'    ,'ئ');
my @knownaramt   = ('´', '`','^','~', '<', '=',      '|', '_', '-', ',', '"', ';', ':', '!', '?', '/', '.', '\'', '(', ')', '[', ']', '{', '}', '@', '$', '*', '\\', '&', '%', '+', '0'..'9', 'a'..'z','A'..'Z', 'ٱ','ڤ','ء','آ','أ','إ','ا','ب','پ','ة','ت','ث','ج','چ','ح','خ','د','ذ','ر','ز','ژ','س','ش','ص','ض','ط','ظ','ع','غ','ف','ق','ك','گ','ل','م','ن','ه' ,'ؤ' ,'و' ,'ي','ى','ئ');
my @unknowneng   = ('¨', '÷', '×', '¬', '¦', '°', 'µ', '¯', '­¡', '¿', '·', '¸','«', '»', '§', '©', '®', '¤', '¢', '£', '±', '¼', '½', '¾', '¹', '²', '³', 'á', 'Á', 'à',      'â', 'Â', 'å', 'Å', 'ä', 'ã', 'Ã', 'æ', 'ç', 'Ç', 'é', 'É', 'è', 'È', 'ê', 'Ê', 'ë', 'í', 'Í', 'Ì', 'î', 'ï', 'Ï', 'ñ', 'Ñ', 'ó', 'Ó', 'ô', 'Ô', 'ö', 'Ö', 'ß', 'ú', 'Ú', 'Û', 'ü', 'ý', 'þ', 'Þ');
my @unknownara   = ('¨', '÷', '×', '¯',                                                  '§', '©', '¢',                        ' ٌ',' ُ',' ْ', '¼', 'ª',  'á', 'Á', 'à',      'â',                'ä', 'ã', 'Ã', 'æ', 'ç', 'Ç', 'é', 'É', 'è',      'ê',      'ë', 'í', 'Í', 'ì', 'î', 'ï',           'Ñ', 'ó', 'Ó', 'ô', 'Ô',      'Ö', 'ß', 'û',      'Û', 'ü');
my @unknownaramt = ('¨', '÷', '×', '¬',      '°',                     '·',     '«', '»', '§', '©', '®', '¤',      '£', '±','ً','َ','ُ','ِ','ْ','¾',                 'à', 'À', 'â',                                    'ç',      'é',      'è',      'ê',      'ë',                'î', 'ï',      'ñ',  'º','ó','ò',  'ô','õ','ø',         'ú','û',           'ü', 'ý','ÿ','þ');
#'<U+0080>','<U+0082>','<U+0085>','<U+0086>','<U+0087>','<U+008D>','<U+008E>','<U+0090>','<U+0091>','<U+0092>','<U+0093>','<U+0094>','<U+0095>','<U+0096>','<U+0097>','<U+0098>','<U+009C>','<U+009D>','<U+009E>','<U+009F>',

#print join(" ",@known),"\n";

my $arach = "ٱڤءآأإابپةتثجچحخدذرزژسشصضطظعغفقكگلمنهؤويىئ";

while(<>) {
	chop;
	if (not $_) {
		print STDERR "Warninig: empty line at $., printed \@emptyline\@\n" if ($verbose);
		print "\@emptyline\@\n";
		next ;
	}
	#from atb_common::HEX_TO_CHAR	
	s/\@ emptyline \@/\@emptyline\@/;
	s/\&gt\;/\>/g;
	s/\&quot\;/\"/g;
	s/\&lt\;/</g;
	s/\&amp\;/&/g;
	#s/\xA1/\,/g;	
	#s/\xD8\x8C/\,/g;
	#s/\xBF/\?/g;	
	#s/\xF6/\_/g;	#atb2
	#s/\xD8\x9F/\?/g;
	#s/\xDC/\_/g;
	#s/\xD9\x80/\_/g;
	#s/\xD9\x8B/\_/g;
	#s/\xF0/\_/g;	#atb2
	#s/\xa2/\,/g; # comma
        #s/¡/\,/g;
        #s/\xba/\;/g; # semicolon
	#arabic numbers
	tr[\x{0660}-\x{0669}][0-9];
	tr[\x{060C}\x{061B}\x{061F}][,;?];
	#$_ =~ tr[٠١٢٣٤٥٦٧٨٩][0123456789];
	#s/٠/0/g;
	#s/١/1/g;
	#s/٢/2/g;
	#s/٣/3/g;
	#s/٤/4/g;
	#s/٥/5/g;
	#s/٦/6/g;
	#s/٧/7/g;
	#s/٨/8/g;
	#s/٩/8/g;
	s/& quot ;/\"/g;
	s/& lt ;/</g;
	s/& gt ;/>/g;
	s/& amp ;/&/g;
	#s/[Â©ï¿½\ïÃ¯·þºòóøñõà]//g;
	s/«/\"/g;
	s/»/\"/g;
	#s/ O />/g;
	#s/ أ />/g;
	#s/[èé]/e/g;

	s/[\x{0080}]//g;
	s/[\x{0085}]//g;
	s/[\x{0090}]/\(/g;
	s/[\x{0091}]/\(/g;
	s/[\x{0092}]/\)/g;
	s/[\x{0093}\x{0094}]/\"/g;
	s/[\x{0095}]//g;
	s/[\x{0096}]/-/g;
	s/[\x{0097}\x{0098}\x{009C}\x{009D}\x{009E}\x{009F}]//g;
	
	s/[^\s\'\,\´\`\^~<>=|_\-\";:!?\/\.\\()\[\]{}@\$\*&%\+0-9a-zA-Zٱڤءآأإابپةتثجچحخدذرزژسشصضطظعغفقكگلمنهؤويىئ]//g;
	if ($seppunc) {
		s/([\'\,\´\`\^~<=|_\-\";:!?\/\.\\()\[\]{}@\$\*&%\+])/ $1 /g;
	}
    if ($transtac_set){
        s/[\'\,\´\`\^~<=|_\-\";:!?\/\.\\()\[\]{}@\$\*&%\+0-9a-zA-Z]/ /g;
    }
	#seperate arabic from non arabic
	s/([$arach])([^$arach])/$1 $2/g;
	s/([^$arach])([$arach])/$1 $2/g;
	s/^\s+//g;
	s/\s+$//g;
	s/\s+/ /g;
    if (not $_) {
		print STDERR "Warninig: empty line AFTER CLEAN at $., printed \@emptyline\@\n" if ($verbose);
		print "\@emptyline\@\n";
		next ;
	}
    print $_;
	print "\n";
}
