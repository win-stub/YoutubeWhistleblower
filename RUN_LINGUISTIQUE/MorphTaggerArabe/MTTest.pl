#!/usr/bin/perl -w

#MTtest

#test phase for morphtagger

use strict;
use File::Spec;
use File::Basename;
use Getopt::Long;

#get the directory of this script
my $MORPHTAGGERDIR = dirname( File::Spec->rel2abs( __FILE__ ) );

#SRILM directory
my $SRILM = "~/src/srilm/bin/i686";

sub helpMessage{
  print STDERR <<"EOF";

MorphTagger *Light* Version 1.0. Copyright 2005, Roy Bar-Haim. 2010 Saab Mansour

Usage: MTTest.pl [options] analysesfile

analysesfile    input sentences to disambiguate.

OPTIONS:
--dir           work directory name. The default value is .MorphTaggerWorkDir.
                
--outputfile    output file for the tagging result. If ommited the output will
                be written to workdir/tagging-analysesfile

--lmfile      language model file. Generated by MTlearn. If not specified,
				workdir/corpus.lm is used.
				
--lexprobfile   lexical probabilities file. Generated by MTLearn. If not specified,
				workdir/corpus.lex.prob is used.

--remove-corpus-analyses
                When this option is specified, MorphTagger wont add the analyses
                found in the corpus to the analyses file. By default the analyses
                are added as this improves results usually.

--nbest number  print nbest tagged sequences and their probabilities

--srilm dir     SRILM directory (different according to the computer!)

--help          print this message

EOF
  exit;
}


############ setting the defaults
my $LMORDER = 3;
my $ANALYSESFILE = "";

my $LMFILE = "";
my $LEXPROBFILE = "";
my $WORKINGDIR = ".MorphTaggerWorkDir";

my $OUTFILE = "";
my $LOGFILE = "";

my $remove_corpus_analyses = 0;


#------------------
# REUT 24-10-2005
#------------------
# added nbest argument 
# to command line args
my $nbest = 1;
my $printprob = 0;
#-----------------


my $tagsfile = "";

############## parsing parameters
######################## parse command line #####################
my $result = GetOptions ("n:i" => \$LMORDER,
					  	 "lmfile|lm:s" => \$LMFILE,
					  	 "lexprobfile|lex:s" => \$LEXPROBFILE,
					  	 "d|dir:s" => \$WORKINGDIR,
					  	 "o|outputfile:s" => \$OUTFILE,
					  	 "srilm:s" => \$SRILM,
					  	 "h|help" => sub { helpMessage } );

if (! $result) {
	print STDERR "something went wrong with reading the command line parameters!\n";
}

if ( ! $LMFILE ) {
	$LMFILE = "$WORKINGDIR/corpus.lm";	
}
die "$LMFILE was not found\n" unless -e $LMFILE;

if ( ! $LEXPROBFILE ) {
	$LEXPROBFILE = "$WORKINGDIR/corpus.lex.prob";	
}
die "$LEXPROBFILE was not found\n" unless -e $LEXPROBFILE;

if (@ARGV == 1){
	$ANALYSESFILE = shift @ARGV;
}
die "$ANALYSESFILE was not found\n" unless -e $ANALYSESFILE;

mkdir($WORKINGDIR) unless -d $WORKINGDIR;

my $analysesfilebasename = basename($ANALYSESFILE);
$LOGFILE = "$WORKINGDIR/$analysesfilebasename.log";
open(LOG, ">$LOGFILE") or die "can't open $LOGFILE: $!";

if ( ! $OUTFILE ) {
	$OUTFILE = "$WORKINGDIR/tagging-$analysesfilebasename";
}
print STDERR "output will be written to $OUTFILE\n";

my $logstr = "";
my $retstderr = "";

my $order = &GetOrder($LMFILE);

######################### Tagging #####################
my $revmapfile = "$WORKINGDIR/$analysesfilebasename.analyses.morph.revmap";

$logstr=$logstr . "command: \n" . "analyses file: $ANALYSESFILE\n" .	
				"language model file: $LMFILE\n" . "Order: $order\n" . 
				"NBest: $nbest\n" . 
				"Output probability: " . (($printprob)?"yes":"no") . "\n" .
				"lexical probabilities: $LEXPROBFILE" . "\n" .
				"working directory: $WORKINGDIR" . "\n" .
				(($remove_corpus_analyses)?"corpus analyses not used":"corpus analyses used") . "\n";

#normal run
if (! -e "$WORKINGDIR/$analysesfilebasename.analyses.morph.map"){
	$logstr .= `perl -I$MORPHTAGGERDIR $MORPHTAGGERDIR/CreateMorphModel.pl $WORKINGDIR/$analysesfilebasename.corpus.morph.lm $WORKINGDIR/$analysesfilebasename.analyses.morph $ANALYSESFILE $LMFILE $LEXPROBFILE $remove_corpus_analyses`;
}
else {
	print STDERR "WARNING: using already created map!\n";
}

`$SRILM/disambig -text-map $WORKINGDIR/$analysesfilebasename.analyses.morph.map -lm $WORKINGDIR/$analysesfilebasename.corpus.morph.lm -order $order -nbest $nbest > $WORKINGDIR/$analysesfilebasename.tagging`;
`$MORPHTAGGERDIR/TagSequenceToEval.pl $WORKINGDIR/$analysesfilebasename.tagging $WORKINGDIR/$analysesfilebasename.analyses.morph.revmap $WORKINGDIR/$analysesfilebasename.probs 0 $printprob > $OUTFILE`;

CheckStat("Disambiguation");


####################### Adjust the output ########################

print STDERR "\nDONE!\n";

print LOG $logstr;
close(LOG);

sub CheckStat {
  my $status = $?;
  if ($status) {
     printf STDERR "%s failed (exit status %d)\nMorphTagger terminated\n",$_[0],$status; 
     exit $status; 
  }
}




sub GetOrder(){
	my $lmfile = shift @_;
	my $order = -1;
	
	open(LM,"<$lmfile") or die "GetOrder- couldn't open $lmfile: $!\n";
	while((my $line = <LM>) !~ /^\\1-grams:\s*$/){
		if ($line=~/^ngram (\d+)=\d+\s*$/){
			$order = $1;
		}
	}
	
	close(LM);
	
	if ($order<1) {die "couldn't retrieve order from $lmfile\n";}
	return $order;
	
}

